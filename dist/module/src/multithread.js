import{getGlobal as e,getLastPath as r,isWorker as t,newUID as o,removeStartingSlash as s}from"./utils.js";export class ExtendedWorkerHandler{constructor(){this.typeListeners={},this.addTypeListener("default",(e=>e)),this.self.onmessage=e=>this.listen(e),this.self._=this.proxy}get self(){return globalThis||window}get proxy(){return new Proxy(this,{get:(e,r)=>r in e?e[r]:(t,o)=>e.addTypeListener(r,t,o||{propertyAccessor:"data"})})}listen(e){const{id:r,data:t}=e.data;"object"==typeof t&&"type"in t&&t.type in this.typeListeners?this.typeListeners[t.type](r,t,e):this.typeListeners.default(r,t,e)}addTypeListener(e,r,t={}){const{keepMessageEvent:o,propertyAccessor:s}=t;this.typeListeners[e]=(e,t,i)=>{const n=s?t[s]:t,p=r(...o?[i,n]:[n]);p instanceof Promise?p.then((r=>{this.self.postMessage({id:e,data:r})})).catch(console.error):this.self.postMessage({id:e,data:p})}}}export class ExtendedWorker{static assert(){const r=e();return"ExtendedWorkers"in r?"resolves"in r.ExtendedWorkers&&"rejects"in r.ExtendedWorkers||(r.ExtendedWorkers.resolves={},r.ExtendedWorkers.rejects={}):r.ExtendedWorkers={resolves:{},rejects:{}},r.ExtendedWorkers}static postMessage(e,r){if(r.promise){const t=o(),[s,i]=e,n={id:t,data:s};return new Promise(((e,o)=>{ExtendedWorker.resolves[t]=e,ExtendedWorker.rejects[t]=o,i?r.postMessage(n,i):r.postMessage(n)}))}r.postMessage(...e)}static onMessage(e){const{id:r,err:t,data:o}=e.data,s=ExtendedWorker.resolves[r],i=ExtendedWorker.rejects[r];t?i&&t&&i(t):s&&s(o),ExtendedWorker.delete(r)}static get resolves(){return ExtendedWorker.assert().resolves}static get rejects(){return ExtendedWorker.assert().rejects}static delete(e){delete ExtendedWorker.resolves[e],delete ExtendedWorker.rejects[e]}static get Handler(){return ExtendedWorkerHandler}static get WrappedHandler(){return`() => ( globalThis || self || window ).listeners = new (${ExtendedWorker.Handler.toString()})();`}static toObjectURL(e){return URL.createObjectURL(new Blob([e],{type:"application/javascript"}))}static _parseLocalScriptsImports(e={}){const r=[];if("localImports"in e){const{localImports:t}=e;if("string"==typeof t)r.push(`${window.location.origin}/${s(t)}`);else{if(!Array.isArray(r))throw new Error("WorkerOptions.localImports is not correctly defined.");r.push(...r.map((e=>`${window.location.origin}/${s(e)}`)))}}return r}static _parseImportScripts(e={}){const r=[];if("importScripts"in e){const{importScripts:t}=e;if("string"==typeof t)r.push(t);else{if(!Array.isArray(t))throw new Error("WorkerOptions.importScripts is not correctly defined.");r.push(...t)}}return r}static _parseLocalModuleImports(e={}){const t=[];if("localImports"in e){const{localImports:o}=e;if("string"==typeof o)t.push(`import ${r(o)} from '${window.location.origin}/${o}';`);else{if(!Array.isArray(o))throw new Error("WorkerOptions.localImports is not correctly defined.");for(const e of o)if("string"==typeof e)t.push(`import ${r(e)} from '${window.location.origin}/${s(e)}';`);else if("object"==typeof e){if(!("objects"in e||"*"in e||"name"in e)||!("path"in e))throw new Error("WorkerOptions.importScripts is not correctly defined.");const{objects:r,"*":o,name:i,path:n}=e;if(i)t.push(`import ${i} from '${window.location.origin}/${s(n)}';`);else if(o)t.push(`import ${r?"string"==typeof r?`{ ${r} },`:`{ ${r.join(",")} }, `:""}* as ${o} from '${window.location.origin}/${s(n)}';`);else{if(!r)throw new Error("WorkerOptions.importScripts is not correctly defined.");t.push(`import ${r?"string"==typeof r?`{ ${r} },`:`{ ${r.join(",")} } `:""} from '${window.location.origin}/${s(n)}';`)}}}}return"includeHandler"in e&&!0===e.includeHandler&&t.push(`import multithread from '${window.location.origin}/src/multithread.js';`),t}static _parseImportModuleScripts(e={}){const t=[];if("importScripts"in e){const{importScripts:o}=e;if("string"==typeof o)t.push(`import ${r(o)} from '${o}';`);else{if(!Array.isArray(o))throw new Error("WorkerOptions.importScripts is not correctly defined.");for(const e of o)if("string"==typeof e)t.push(`import ${r(e)} from '${e}';`);else if("object"==typeof e){if(!("objects"in e||"*"in e||"name"in e)||!("path"in e))throw new Error("WorkerOptions.importScripts is not correctly defined.");const{objects:r,"*":o,name:s,path:i}=e;if(s)t.push(`import ${s} from '${i}';`);else if(o)t.push(`import ${r?"string"==typeof r?`{ ${r} },`:`{ ${r.join(",")} }, `:""}* as ${o} from '${i}';`);else{if(!r)throw new Error("WorkerOptions.importScripts is not correctly defined.");t.push(`import ${r?"string"==typeof r?`{ ${r} },`:`{ ${r.join(",")} } `:""} from '${i}';`)}}}}return t}static _exportHandlerToScriptImport(){return ExtendedWorker.toObjectURL(`(${ExtendedWorker.WrappedHandler})();`)}static _uglifyWorkerToScript(e){if("string"==typeof e)return ExtendedWorker.toObjectURL(e);throw new Error("WorkerString is not a string.")}static _craftScriptForModuleImport(e,r={}){if("string"!=typeof e)throw new Error("WorkerString is not a string.");const t=[...ExtendedWorker._parseLocalModuleImports(r),...ExtendedWorker._parseImportModuleScripts(r)];let o;if("uglify"in r&&!0===r.uglify)throw new Error("WorkerOptions.uglify can not be applied to module worker.");return o=`${t.length>0?`${t.join("\n")}\n`:""}(${e})();`,ExtendedWorker.toObjectURL(o)}static _craftScriptForScriptImport(e,r={}){if("string"!=typeof e)throw new Error("WorkerString is not a string.");const t=[...ExtendedWorker._parseLocalScriptsImports(r),...ExtendedWorker._parseImportScripts(r)];let o;return"includeHandler"in r&&!0===r.includeHandler&&t.push(ExtendedWorker._exportHandlerToScriptImport()),"uglify"in r&&!0===r.uglify?(t.push(ExtendedWorker._uglifyWorkerToScript(e)),o=`importScripts("${t.join('","')}");`):o=`${t.length>0?`importScripts("${t.join('","')}");\n`:""}(${e})();`,ExtendedWorker.toObjectURL(o)}static createObjectURL(e="",r={}){if("object"==typeof r){if("type"in r&&"module"===r.type)return ExtendedWorker._craftScriptForModuleImport(e,r);if("type"in r&&"module"!==r.type&&"classic"!==r.type)throw new Error(`WorkerOptions.type:${r.type} is not a valid type.`);return ExtendedWorker._craftScriptForScriptImport(e,r)}if("string"==typeof e)return ExtendedWorker.toObjectURL(e);throw new Error("WorkerString is not a string.")}static new(e,r={}){return new ExtendedWorker(e,{promise:!0,type:"module",includeHandler:!0,...r}).proxy}constructor(e,r){let t;if("function"==typeof e)t=ExtendedWorker.createObjectURL(e.toString(),r);else{if("string"!=typeof e)throw new Error("WorkerObject is not a string or a function.");t=ExtendedWorker.createObjectURL(e,r)}this.worker=new Worker(t,r),r&&"promise"in r&&!0===r.promise?(this.worker.promise=!0,ExtendedWorker.assert(),this.worker.onmessage=ExtendedWorker.onMessage):this.worker.promise=!1}get proxy(){return new Proxy(this,{get:(e,r)=>r in e?e[r]:(t,o)=>e.postMessage({type:r,data:t},o)})}set onmessage(e){this.worker.onmessage=e}get onmessage(){return this.worker.onmessage}set onerror(e){this.worker.onerror=e}get onerror(){return this.worker.onerror}set onmessageerror(e){this.worker.onmessageerror=e}get onmessageerror(){return this.worker.onmessageerror}dispatchEvent(e){return this.worker.dispatchEvent(e)}addEventListener(e,r,t){return this.worker.addEventListener(e,r,t)}removeEventListener(e,r,t){this.worker.removeEventListener(e,r,t)}terminate(){this.worker.terminate()}postMessage(e,r){return ExtendedWorker.postMessage([e,r],this.worker)}}export const Handler=t()?new ExtendedWorkerHandler:void 0;export default{ExtendedWorker,ExtendedWorkerHandler,Handler};